version: "3"

services:
  # User microservice
  user:
    build:
      context: ./user-management
      dockerfile: Dockerfile
    command: "python /usr/src/app/user.py"
    extra_hosts:
      - "rabbitmq:172.31.22.232"
      - "host.docker.internal:172.31.22.232"

  # Catalog microservice
  catalog:
    build:
      context: ./catalog
      dockerfile: Dockerfile
    command: "python /usr/src/app/catalog_item.py"
    extra_hosts:
      - "rabbitmq:172.31.22.232"
      - "host.docker.internal:172.31.22.232"

  # Order microservice
  order:
    build:
      context: ./order
      dockerfile: Dockerfile
    command: "python /usr/src/app/order.py"
    extra_hosts:
      - "rabbitmq:172.31.22.232"
      - "host.docker.internal:172.31.22.232"
  
  # Order RabbitMQ consumer
  order-rabbitmq:
    build:
      context: ./order
      dockerfile: Dockerfile
    command: "python /usr/src/app/order_consumer.py"
    extra_hosts:
      - "rabbitmq:172.31.22.232"
      - "host.docker.internal:172.31.22.232"

  # Payment microservice
  payment:
    build:
      context: ./payment
      dockerfile: Dockerfile
    command: "python /usr/src/app/payment.py"
    extra_hosts:
      - "rabbitmq:172.31.22.232"
      - "host.docker.internal:172.31.22.232"

  # Voucher microservice
  voucher:
    build:
      context: ./voucher
      dockerfile: Dockerfile
    command: "python /usr/src/app/voucher.py"
    extra_hosts:
      - "rabbitmq:172.31.22.232"
      - "host.docker.internal:172.31.22.232"
  
  # Voucher RabbitMQ consumer
  voucher-rabbitmq:
    build:
      context: ./voucher
      dockerfile: Dockerfile
    command: "python /usr/src/app/voucher_consumer.py"
    extra_hosts:
      - "rabbitmq:172.31.22.232"
      - "host.docker.internal:172.31.22.232"

  # Review microservice
  review:
    build:
      context: ./review
      dockerfile: Dockerfile
    command: "python /usr/src/app/review.py"
    extra_hosts:
      - "rabbitmq:172.31.22.232"
      - "host.docker.internal:172.31.22.232"
  
  # Notification microservice
  notification:
    build:
      context: ./notification
      dockerfile: Dockerfile
    command: "node app"
    extra_hosts:
      - "rabbitmq:172.31.22.232"
      - "host.docker.internal:172.31.22.232"
  
  # Kong: The API Gateway
  kong:
    image: kong:latest
    restart: unless-stopped
    networks:
      - traval-net
    environment:
      KONG_PG_HOST: "${AWS_RDS_HOST}"
      KONG_PG_DATABASE: kong
      KONG_PG_USER: "${AWS_RDS_USERNAME}"
      KONG_PG_PASSWORD: "${AWS_RDS_PASSWORD}"
      KONG_PG_SSL: "true"
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 5s
      timeout: 2s
      retries: 15
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8443:8443"
    extra_hosts:
      - "kong:172.31.22.232"
      - "host.docker.internal:172.31.22.232"
  
  # Konga: Kong GUI
  konga:
    image: pantsel/konga:next
    restart: unless-stopped
    networks:
        - traval-net
    environment:
      DB_ADAPTER: postgres
      DB_HOST: "${AWS_RDS_HOST}"
      DB_USER: "${AWS_RDS_USERNAME}"
      DB_PASSWORD: "${AWS_RDS_PASSWORD}"
      DB_DATABASE: konga_db
      NODE_ENV: production
    ports:
      - "1337:1337"
    extra_hosts:
      - "host.docker.internal:172.31.22.232"